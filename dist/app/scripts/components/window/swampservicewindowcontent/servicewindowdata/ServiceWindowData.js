define(["react","constants/SERVICE_STATE","constants/PROMPTS","constants/SWAMP_MODE","constants/WINDOW_OPEN_TRIGGER","constants/INTERNAL_PLUGINS","jsx!components/selectbox/SelectBox","bootstrap/OverlayTrigger","bootstrap/Tooltip","actions/client","stores/swampPluginsStore","moment","env"],function(a,b,c,d,e,f,g,h,i,j,k,l,m){var n="Select Env...",o=a.createClass({displayName:"ServiceWindowData",getInitialState:function(){return{selectedEnvironment:this.props.service.runningEnvironment}},render:function(){var c;return this.state.selectedEnvironment!=this.props.service.runningEnvironment&&(c=a.DOM.div({className:""},a.DOM.button({onClick:this._confirmChangeSelectedEnv,className:"btn margin-right-5"},a.DOM.div({className:"text-14 w300 "+(this.props.service.state==b.RUN?"color-yellow":"color-green")},this.props.service.state==b.RUN?"Restart":"Start")),a.DOM.button({className:"btn margin-right-5",onClick:this._cancelChangeSelectedEnv},a.DOM.div({className:"w300 color-red text-14"},"Cancel")))),a.DOM.div({className:"service-data text-14"},a.DOM.div({className:"flex data-row"},a.DOM.div({className:"flex flex-1 padding-right-10 data-col flex-align-center"},a.DOM.div({className:"flex-1"},"Started"),a.DOM.div({className:"w500"},this.props.service.startTime?l(this.props.service.startTime).fromNow():"-")),a.DOM.div({className:"flex flex-1 padding-left-10 data-col flex-align-center"},a.DOM.div({className:"flex-1"},"Change Env"),a.DOM.div({className:"flex"},c,g({options:Object.keys(this.props.service.environments),selected:this.state.selectedEnvironment||n,onChange:this._onEnvSelectBoxChange})))),a.DOM.div({className:"flex data-row"},a.DOM.div({className:"flex flex-1 padding-right-10 data-col flex-align-center"},a.DOM.div({className:"flex-1"},"Process ID"),a.DOM.div({className:"w500"},this.props.service.pid||"-")),a.DOM.div({className:"flex flex-1 padding-left-10 data-col flex-align-center"},a.DOM.div({className:"flex-1"},"Current Env"),a.DOM.div({className:"w500 flex flex-align-center"},a.DOM.div(null,this.props.service.runningEnvironment||"-"),a.DOM.div({className:"cursor-pointer margin-left-10"},a.DOM.button({className:"btn",onClick:this._onEnvEditClick},a.DOM.i({className:"fa fa-gear"})))))),a.DOM.div({className:"flex data-row"},a.DOM.div({className:"flex flex-1 data-col flex-align-center"},a.DOM.div({className:"flex-1"},"Service Path"),h({placement:"top",overlay:i(null,this.props.service.path)},a.DOM.div({className:"w500 text-truncate"},this.props.service.path))),a.DOM.div({className:"flex flex-1 data-col flex-align-center"},a.DOM.div({className:"flex-1"},"Service Script"),a.DOM.div({className:"w500"},this.props.service.script||"-"))))},_onEnvSelectBoxChange:function(a){this.props.service.setSelectedEnvironment(a),this.setState({selectedEnvironment:a})},_confirmChangeSelectedEnv:function(){this.props.service.isRunning?m.info.mode==d.REMOTE?this.props.onPrompt&&this.props.onPrompt(c.REMOTE_SERVICE_RESTART_WITH_ENV.format("restart",this.props.service.name,this.state.selectedEnvironment),function(){j.restartService(this.props.service.id)}.bind(this)):j.restartService(this.props.service.id):m.info.mode==d.REMOTE?this.props.onPrompt&&this.props.onPrompt(c.REMOTE_SERVICE_RESTART_WITH_ENV.format("start",this.props.service.name,this.state.selectedEnvironment),function(){j.startService(this.props.service.id)}.bind(this)):j.startService(this.props.service.id)},_cancelChangeSelectedEnv:function(){this.props.service.setSelectedEnvironment(this.props.service.runningEnvironment),this.setState({selectedEnvironment:this.props.service.runningEnvironment})},_onEnvEditClick:function(){var a=k.getByName(f.ENVIRONMENTS_EDITOR);a&&(j.openPluginWindow(a,e.TOP_MENU),a.isLoaded()?a.sendMessage(this.props.service.name):a.on("loaded",this._onEnvEditorPluginLoaded))},_onEnvEditorPluginLoaded:function(){var a=k.getByName(f.ENVIRONMENTS_EDITOR);a.sendMessage(this.props.service.name),a&&a.off("loaded",this._onEnvEditorPluginLoaded)}});return o});
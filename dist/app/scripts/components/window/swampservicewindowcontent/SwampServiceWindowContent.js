define(["react","jsx!components/window/swampservicewindowcontent/servicewindowfooter/ServiceWindowFooter","jsx!components/window/swampservicewindowcontent/servicewindowdata/ServiceWindowData","jsx!components/window/swampservicewindowcontent/servicewindowheader/ServiceWindowHeader","jsx!components/window/swampservicewindowcontent/servicewindowperformance/ServiceWindowPerformance","constants/SERVICE_STATE","constants/SWAMP_MODE","constants/PROMPTS","actions/client","env"],function(a,b,c,d,e,f,g,h,i,j){var k=a.createClass({displayName:"SwampServiceWindowContent",getInitialState:function(){return{}},componentDidMount:function(){this._bindEvents()},componentWillUnmount:function(){this._unbindEvents()},render:function(){return a.DOM.div({className:"flex-1 flex flex-vbox swamp-service-window-content"},d({service:this.props.service}),a.DOM.div({className:"flex-1 flex flex-vbox"},c({service:this.props.service,onPrompt:this._onPrompt}),e({service:this.props.service})),b({service:this.props.service,onStartClick:this._startService,onStopClick:this._stopService,onRestartClick:this._restartService}))},_stopService:function(){j.info.mode==g.REMOTE?this._prompt(h.REMOTE_SERVICE_STOP.format(this.props.service.name),function(){i.stopService(this.props.service.id)}.bind(this)):i.stopService(this.props.service.id)},_startService:function(){j.info.mode==g.REMOTE?this._prompt(h.REMOTE_SERVICE_START.format(this.props.service.name),function(){i.startService(this.props.service.id)}.bind(this)):i.startService(this.props.service.id)},_restartService:function(){j.info.mode==g.REMOTE?this._prompt(h.REMOTE_SERVICE_RESTART.format(this.props.service.name),function(){i.restartService(this.props.service.id)}.bind(this)):i.restartService(this.props.service.id)},_prompt:function(a,b,c){i.windowPrompt(this.props.windowId,a,b,c)},_bindEvents:function(){$(this.getDOMNode()).on("contextmenu",this._onContextMenuClick),this.props.service.on("contextMenuRestart",this._restartService),this.props.service.on("contextMenuStart",this._startService),this.props.service.on("contextMenuStop",this._stopService),this.props.service.on("contextMenuForceStop",this._stopService)},_unbindEvents:function(){$(this.getDOMNode()).off("contextmenu",this._onContextMenuClick),this.props.service.off("contextMenuRestart",this._restartService),this.props.service.off("contextMenuStart",this._startService),this.props.service.off("contextMenuStop",this._stopService),this.props.service.off("contextMenuForceStop",this._stopService)},_onContextMenuClick:function(a){return a.stopPropagation(),a.preventDefault(),i.showContextMenu(this.props.service.getContextMenu(),{top:a.pageY,left:a.pageX}),!1}});return k});